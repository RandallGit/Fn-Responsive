@import 'global.less';
@import '../../../semantic.gs/stylesheets/less/grid.less';

// MEDIUM GRID //

// For our medium grid we use 6 columns to maximize screen real estate 
// This works nicely in that it is exactly half of our large sized grid
// The numbers below leverage the golden means and the rule of thirds while
// supporting 44 pixels as a touch friendly building block
@column-width: 88;
@gutter-width: 21;
@columns: 6;

// Give us divine proportions instead of pixels
@total-width: 100%;

// LAYOUT //
.container {
	width: 98%; // We need a little breathing room around the edges
	padding: 0;
	margin: 0;
	margin-right: auto;
	margin-left: auto;
	background: transparent;
}
#top-bar {
	.column(6);

	header {
		.row(6);
		
		#title {
			.column(4,6);
		}
		#callout {
			.column(2,6);
		}
	}
}

#example {
	.column(6);
	
	#column-container {
		.row(6);

		#c01, #c02, #c03, #c04, #c05, #c06 {
		.column(1,6);
		transition: all 500ms cubic-bezier(0.250, 0.250, 0.750, 0.750); /* linear */
		}
	}
}
#c07, #c08, #c09, #c10, #c11, #c12 {
	display: none;
}

#hero {
	.column(6);
		
	div {
		.row(6);
		padding: 2em 1em;
	
		figure {
		.column(3,6);
		}
		hgroup {
		.column(3,6);
		}
	}
}
#values ul {
	.column(3);
	padding: 1em;
}
#values ul li {
	padding-top: 1em;
}
#schema {
	.column(6);	
	
	section {
		.row(6);
		padding: 1em;
		
		figure {
			.column(6,6);
			padding-bottom: 1em;
			text-align: center;
		}
		ul {
			.column(6,6);
		}
		ul li {
			padding-bottom: 1em;
		}
	}
}
#thanks {
	.column(6);	
	
	footer {
		.row(6);
		padding: 1em;
		
		section {
			.column(3,6);
		}
	}
}

// DESIGN //
#example {
	background-color: aqua;
}
#values {
	background-color: #D7EDE1;
}
#hero {
	background-color: white;
}
#c01:after {
	content:" 1";
}
#c02:after {
	content:" 2";
}
#c03:after {
	content:" 3";
}
#c04:after {
	content:" 4";
}
#c05:after {
	content:" 5";
}
#c06:after {
	content:" 6";
}
.column_example {
	-webkit-transition: all 500ms cubic-bezier(0.445, 0.050, 0.550, 0.950); 
	-moz-transition: all 500ms cubic-bezier(0.445, 0.050, 0.550, 0.950); 
    -ms-transition: all 500ms cubic-bezier(0.445, 0.050, 0.550, 0.950); 
    -o-transition: all 500ms cubic-bezier(0.445, 0.050, 0.550, 0.950); 
    transition: all 500ms cubic-bezier(0.445, 0.050, 0.550, 0.950); /* easeInOutSine */
}
// Below are em based breakpoints for fine tuning and scaling the baseline

/* @media screen and (min-width: 640px) */
@media screen and (min-width: 40em) {
 body {
    /* Style tweeks go here */  
  }
}
/* @media screen and (min-width: 720px) */
@media screen and (min-width: 45em) {
 body {
    /* Style tweeks go here */  
  }
}/* @media screen and (min-width: 888px) */
@media screen and (min-width: 55.5em) {
 body {
    /* Style tweeks go here */  
  }
}